name: Code Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Run CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"

      - name: Run Bandit
        uses: PyCQA/bandit@master
        with:
          targets: .
          format: json
          output: reports/bandit-report.json

      - name: Run Pylint
        uses: PyCQA/pylint@master
        with:
          path: .
          output: reports/pylint-report.txt

      - name: Run Flake8
        uses: PyCQA/flake8@master
        with:
          path: .
          output: reports/flake8-report.txt

      - name: Run Black
        uses: psf/black@master
        with:
          path: .
          output: reports/black-report.txt

      - name: Run isort
        uses: pycqa/isort@master
        with:
          path: .
          output: reports/isort-report.txt

      - name: Run mypy
        uses: pre-commit/mirrors-mypy@master
        with:
          path: .
          output: reports/mypy-report.txt

      - name: Run Prettier
        uses: prettier/check@v1
        with:
          path: .

      - name: Run Stylelint
        uses: stylelint/action@v1
        with:
          path: .

      - name: Run TSLint
        uses: palantir/tslint-action@v1
        with:
          path: .

      - name: Run ESLint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: '--ext .js,.jsx,.ts,.tsx'

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-scan-results
          path: |
            reports/
            .sonarqube/
            .codeql/
            .semgrep/
          retention-days: 7 